services:

  database-service:
    image: postgres:${POSTGRES_VERSION}
    container_name: database-service
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGUSER=${POSTGRES_USER}
    volumes:
      - db:/var/lib/postgresql/data
      - ./sql/chuck_norris.sql:/docker-entrypoint-initdb.d/01-chuck_norris.sql
      - ./sql/init-keycloak-db.sql:/docker-entrypoint-initdb.d/02-init-keycloak-db.sql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    command: 
      - "start-dev"
      - "--import-realm"
      - "--health-enabled=true"
      - "--http-enabled=true"
      - "--proxy-headers=forwarded"
      - "--http-relative-path=/auth"
    ports:
      - "8180:8080"  # Port pour acc√®s admin direct
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://database-service:${POSTGRES_PORT}/keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_TRANSACTION_XA_ENABLED: 'false'
      KC_HEALTH_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_FEATURES: token-exchange,admin-fine-grained-authz
      KC_REALM_IMPORT: /opt/keycloak/data/import/app-realm.json
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    networks:
      - app-network
    depends_on:
      database-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/opt/keycloak/bin/kc.sh", "show-config"]
      interval: 15s
      timeout: 5s
      retries: 3

  backend:
    image: leeson77/chuck-norris-backend:${BACKEND_VERSION}
    container_name: backend
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      - QUARKUS_DATASOURCE_USERNAME=${POSTGRES_USER}
      - QUARKUS_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - QUARKUS_DATASOURCE_DB=${POSTGRES_DB}
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://database-service:${POSTGRES_PORT}/${POSTGRES_DB}
      - QUARKUS_OIDC_AUTH_SERVER_URL=http://keycloak:8080/auth/realms/${KEYCLOAK_REALM}
      - QUARKUS_OIDC_CLIENT_ID=${BACKEND_CLIENT_ID}
      - QUARKUS_OIDC_CREDENTIALS_SECRET=${BACKEND_CLIENT_SECRET}
      - QUARKUS_OIDC_TOKEN_ISSUER=http://localhost/auth/realms/${KEYCLOAK_REALM}
      - MP_JWT_VERIFY_PUBLICKEY_LOCATION=http://keycloak:8080/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
    networks:
      - app-network
    depends_on:
      database-service:
        condition: service_healthy
      keycloak:
        condition: service_healthy


  frontend:
    image: leeson77/chuck-norris-frontend:${FRONTEND_VERSION}
    container_name: frontend
    networks:
      - app-network
    environment:
      - NG_APP_API_URL=http://localhost
      - NG_APP_AUTH_URL=http://localhost/auth
      - NG_APP_CLIENT_ID=${NG_APP_CLIENT_ID}
    depends_on:
      - backend


  reverse-proxy:
    image: traefik:${TRAEFIK_VERSION}
    container_name: reverse-proxy
    command:
      - "--api.insecure=true"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80"
    ports:
      - "${TRAEFIK_PORT}:80" # Traefik HTTP port
      - "${TRAEFIK_DASHBOARD_PORT}:8080" # Traefik Dashboard port
    volumes:
      - ./traefik:/etc/traefik/dynamic
    restart: unless-stopped
    networks:
      - app-network

volumes:
  db:
    driver: local

networks:
  app-network:
    driver: bridge